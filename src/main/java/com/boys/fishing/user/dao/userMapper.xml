<?xml version="1.0" encoding="UTF-8"?>
<!-- mapper에 대한 선언 문 -->
<!DOCTYPE mapper PUBLIC
   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<mapper namespace="com.boys.fishing.user.dao.UserDAO">

<select id="myUserInfo" parameterType="String" resultType="userInfo"> 
	SELECT * FROM userInfo u left OUTER JOIN userImg i 
	ON u.u_userid=i.ui_userid WHERE u.u_userid=#{u_userid}
</select>

<select id="nickcheck" parameterType="String" resultType="int">
	SELECT COUNT(u_usernickname) FROM userInfo WHERE u_usernickname = #{u_usernickname}
</select>

<update id="userInfoUpdate" parameterType="hashmap">
	UPDATE userInfo SET u_useremail= #{useremail}, u_userphonenum = #{userphonenum},
						u_usernickname = #{nickname} WHERE u_userid = #{u_userid}
</update>

<update id="PwUpdate" parameterType="String">
	UPDATE userInfo SET u_userpw = #{param1} WHERE u_userid = #{param2}
</update>

<select id="fileCheck" parameterType="String" resultType="int">
	SELECT COUNT(ui_userid) FROM userImg WHERE ui_userid = #{u_userid}
</select>

<delete id="fileDelete" parameterType="String">
	DELETE FROM userImg WHERE ui_userid=#{u_userid}
</delete>

<insert id="fileUpdate"  parameterType="String">
	INSERT INTO userImg VALUES(#{param1},#{param2})
</insert>

<select id="fileName" parameterType="String" resultType="userInfo">
	SELECT * FROM userImg WHERE ui_userid=#{u_userid}
</select>

<update id="userQuit" parameterType="String">
	UPDATE userInfo SET U_userdelYN = 'Y' WHERE u_userid = #{u_userid}
</update>

<select id="shipList" parameterType="String" resultType="reser">
	SELECT s_name FROM ship WHERE u_userid=#{u_userid} ORDER BY s_name
</select>

<insert id="shipJoin" useGeneratedKeys="true" keyColumn="s_num" keyProperty="s_num" parameterType="reser">
	INSERT INTO ship (s_num,u_userid,s_name,s_minpassenger,s_maxpassenger,s_img,s_equipment,s_convenient,s_address)
	 VALUES(S_NUM_SEQ.nextval,#{u_userid},#{s_name},#{s_minpassenger},#{s_maxpassenger},'N',#{s_equipment},#{s_convenient},#{s_address})
</insert>

<select id="shipListDetail" parameterType="String" resultType="reser">
	SELECT * FROM ship s left OUTER JOIN shipimg i ON s.s_num=i.s_num WHERE s.u_userid=#{param1} AND s_name=#{param2}
</select>

<update id="shipImg" parameterType="hashmap">
	UPDATE ship set s_img='Y' WHERE s_num=#{s_num}
</update>

<insert id="shipImgInsert" parameterType="hashmap">
	INSERT INTO shipimg VALUES (#{s_num},#{newFileName})
</insert>

<select id="myReserveDetail" parameterType="String" resultType="hashmap" >
	SELECT * FROM reserinfo LEFT OUTER JOIN island i ON( i.i_num = reserinfo.i_num) WHERE ri_num=#{params}
</select>



<!-- 마이페이지 메인 -->
<!-- 선장 여부 파악 -->
<select id="captainYN" resultType="String">
select c.cap_idYSN FROM captain c, userInfo u WHERE c.u_userid = u.u_userid and u.u_userid = #{param1}
</select>

<!-- 자유게시판 리스트 데이터 가져오기-->
<select id="sumsumlist" resultType="sumsum">
	SELECT * FROM (SELECT ROW_NUMBER() OVER(ORDER BY B_num DESC) 
AS rnum, b_num, b_userid, b_subject, b_regdate FROM board WHERE b_userid = #{param2} AND b_code = 'B001') WHERE rnum BETWEEN #{param1} AND #{param3}
</select>

<!-- 정보게시판 리스트 데이터 가져오기 -->
<select id="infoList" resultType="sumsum">
	SELECT * FROM (SELECT ROW_NUMBER() OVER(ORDER BY B_num DESC) 
AS rnum, b_num, b_userid, b_subject, b_regdate FROM board WHERE b_userid = #{param2} AND b_code = 'B003') WHERE rnum BETWEEN #{param1} AND #{param3}
</select>

<!-- 후기게시판 리스트 데이터 가져오기 -->
<select id="revList" resultType="sumsum">
	SELECT * FROM (SELECT ROW_NUMBER() OVER(ORDER BY B_num DESC) 
AS rnum, b_num, b_userid, b_subject, b_regdate FROM board WHERE b_userid = #{param2} AND b_code = 'B002') WHERE rnum BETWEEN #{param1} AND #{param3}
</select>

<!-- 페이징처리를 위한 전체페이지 확인 -->
<select id="totalPage" resultType="int">
SELECT COUNT(b_num) FROM board WHERE b_userid = #{param1} AND b_code = #{param2}
</select>



<!-- 회원 포인트 -->
<!-- 회원 잔여포인트 확인 -->
<select id="point" resultType="int">
select p_balance
from(
   select *
   from point
   where p_userid = #{param1}
   order by p_regdate DESC
)
where ROWNUM = 1
</select>

<!-- 포인트 충전 -->
<insert id="pointCharge">
INSERT INTO point(p_userid, p_content, p_otherid, p_cost, p_balance) VALUES(#{param3}, 'PNT_001', #{param3}, #{param2}, #{param1})
</insert>

<!-- 포인트 출금 -->
<insert id="pointWithdraw">
INSERT INTO point(p_userid, p_content, p_otherid, p_cost, p_balance) VALUES(#{param3}, 'PNT_002', #{param3}, #{param2}, #{param1})
</insert>

<!-- 포인트 히스토리 -->
<select id="pointHistoryList" resultType="userInfo">
select * FROM (SELECT ROW_NUMBER() OVER(ORDER BY p_regdate DESC)
AS rnum, p_content, p_otherid, p_regdate, p_cost, p_balance FROM point WHERE p_userid = #{param2}) WHERE rnum BETWEEN #{param1} AND #{param3}
</select>

<!-- 포인트 히스토리 페이징처리를 위한 포인트 히스토리 전체페이지 확인 -->
<select id="totalPageP" resultType="int">
SELECT COUNT(p_userid) FROM point WHERE p_userid = #{param1}
</select>


<!-- 선장 스케쥴 -->
<!-- 배 이름  -->
<select id="shipNamee" resultType="reser">
SELECT * FROM ship s WHERE s.u_userid = #{param1}
</select>

<!-- 출항지 -->
<select id="startPoint" resultType="reser">
SELECT * FROM ship  WHERE s_num = #{param1}
</select>

<!-- 선장 스케쥴 등록하기 -->
<insert id="captainWrite" parameterType="reser" >
	INSERT INTO operrange 
	VALUES(#{s_num}, #{i_num},#{op_startpoint},#{op_starttime},#{op_duringtime},#{op_returntime},#{op_date},#{op_price})
</insert>


<!-- 운항예약확정 히스토리 페이징처리를 위한 운항예약확정 히스토리 전체페이지 확인 -->
<select id="totalPageCR" resultType="int">
SELECT COUNT(r.s_num) FROM reserINFO r, operrange o, island i, userInfo u 
WHERE r.s_num = #{param1} AND r.RI_code IN('RI002', 'RI003', 'RI004', 'RI005') AND o.op_date = r.ri_date AND r.i_num=i.i_num AND o.s_num=r.s_num AND u.U_userid = r.RI_userid
</select>

<!-- 선장 운항 히스토리 뿌리기 -->
<select id="reserHistory" resultType="hashmap">
select * FROM (SELECT ROW_NUMBER() OVER(ORDER BY o.op_date DESC)
AS rnum, u.u_usernickname, i.I_name, o.op_date, r.RI_people, r.RI_pay, r.RI_reserdate, r.RI_code
FROM reserINFO r, operrange o, island i, userInfo u
WHERE r.s_num = #{param2} AND r.RI_code IN('RI002', 'RI003', 'RI004', 'RI005') AND o.op_date = r.ri_date AND r.i_num=i.i_num AND o.s_num=r.s_num AND u.U_userid = r.RI_userid) 
WHERE rnum BETWEEN #{param1} AND #{param3}
</select>

<!-- 유저예약  히스토리 페이징처리를 위한 유저예약 히스토리 전체페이지 확인 -->
<select id="totalPageR" resultType="int">
SELECT COUNT(ri_userid) FROM reserINFO WHERE ri_userid = 'prac2' AND RI_code IN('RI002', 'RI003', 'RI004', 'RI005', 'RI006')
</select>

<!-- 유저 예약 히스토리 뿌리기 -->
<select id="reserHistoryList" resultType="hashmap">
select * FROM (SELECT ROW_NUMBER() OVER(ORDER BY r.ri_reserdate DESC)
AS rnum, r.ri_num, i.I_name, r.RI_pay, r.RI_reserdate, r.RI_code
FROM reserINFO r, operrange o, island i, userInfo u
WHERE r.ri_userid = #{param2} AND r.RI_code IN('RI002', 'RI003', 'RI004', 'RI005','RI006') AND o.op_date = r.ri_date AND r.i_num=i.i_num AND o.s_num=r.s_num AND u.U_userid = r.RI_userid) 
WHERE rnum BETWEEN #{param1} AND #{param3}
</select>


<select id="reserWait" resultType="HashMap">
SELECT s.s_name, r.ri_num, r.ri_userid, i.i_name, r.ri_startpoint, r.ri_starttime, r.ri_returntime,
r.ri_duringtime, r.ri_people, r.ri_pay, r.ri_code, i.i_name
FROM reserInfo r, island i, ship s  
WHERE s.s_num = r.s_num and i.i_num = r.i_num and s.u_userid in(#{param1}) and ri_code=#{param2} and TO_CHAR(ri_date, 'yyyy-mm-dd') = #{param3}
</select>

<!-- 예약확정 -->
<update id="reserDecide">
UPDATE reserInfo set ri_code = 'RI002' WHERE ri_num = #{param1}
</update>

<!-- 예약취소 -->
<update id="reserCancel">
UPDATE reserInfo set ri_code = 'RI004', ri_cancelreason = #{param2} WHERE ri_num = #{param1}
</update>

<!-- 예약확정 취소 -->
<update id="decideCancel">
UPDATE reserInfo set ri_code = 'RI005', ri_cancelreason = #{param2} WHERE ri_num = #{param1}
</update>

<select id="overCheck" resultType="int">
	SELECT COUNT(U_userid) FROM userinfo WHERE ${param1} = #{param2}
</select>

<insert id="join" parameterType="userInfo">
	INSERT INTO userInfo VALUES (#{u_userid},#{u_userpw},#{u_userphonenum},#{u_useremail},#{u_usernickname},'N',#{u_kakaoYN},'N',SYSDATE)
</insert>

<insert id="userProfile" parameterType="String">
	INSERT INTO userIMG VALUES (#{param1}, #{param2})
</insert>

<select id="login" parameterType="String" resultType="HashMap">
	SELECT u.U_userid, u.U_userpw, u.U_usernickname, u.U_managerYN, u.U_kakaoYN, ui.UI_name, bl.bl_code, bl.bl_regdate, bl.bl_disdate
	FROM userInfo u LEFT OUTER JOIN userIMG ui ON u.u_userid = ui.UI_userid
    LEFT OUTER JOIN blacklist bl ON u.u_userid = bl.bl_userid WHERE u.u_userid = #{param1} AND u.u_userdelyn = 'N'
</select>

<select id="lookUp" resultType="userInfo">
	SELECT * FROM kakaoUser WHERE k_userid = #{param1}
</select>

<insert id="kakaoJoin" parameterType="userInfo">
	INSERT INTO kakaoUser VALUES (#{u_userpw},#{u_userid},#{u_userphonenum},#{u_useremail})
</insert>

<!-- 선장 신청 페이지 들어갈 수 있는지 여부 -->
<select id="captain_requestForm" parameterType="String" resultType="String">
	SELECT cap_idysn FROM captain WHERE u_userid = #{param1}
</select>


<!-- 선장 요청 테이블 넣기 -->

<insert id="captain_request">
	INSERT INTO captain(u_userid,cap_licenseyn,cap_idysn,cap_cancelreason,cap_requesttime,cap_manager) VALUES(#{param1},'N','S','없음',SYSDATE,'none')
</insert>
<!-- 선장 자격증 테이블에 사진 넣기 -->
<insert id="captainPhoto" >
	INSERT INTO license VALUES(#{param2},#{param1})
</insert>
<!-- 선장 테이블에 있는지 확인 -->
<select id="check_cap" resultType="int">
	SELECT count(u_userid) FROM captain WHERE u_userid = #{param1}	
</select>

<insert id="notice" parameterType="userinfo" >
	INSERT INTO alarm 
	<if test="a_pathnum.equals('')">VALUES(a_num_seq.NEXTVAL,#{u_userid},SYSDATE,'',#{a_content},'N','N',#{a_path},#{a_code}, '')</if>
	<if test="!a_pathnum.equals('')">VALUES(a_num_seq.NEXTVAL,#{u_userid},SYSDATE,'',#{a_content},'N','N',#{a_path},#{a_code}, #{a_pathnum)</if>
</insert>

<select id="captainScheduleList" resultType="hashmap">
	SELECT DISTINCT TO_CHAR(sub.ri_date, 'yyyy-mm-dd') AS end FROM 
	(SELECT s.*,ri.* FROM ship s INNER JOIN reserinfo ri ON (s.s_num = ri.s_num) WHERE s.u_userid =#{param1}) sub
</select>

<insert id="pointSet">
	INSERT INTO point VALUES(#{param1},'PNT_001',SYSDATE,'관리자','0','0')
</insert>

</mapper>